# SECRET LINKS AND INSTRUCTIONS
# -----------------------------

# HOW TO ACTIVATE THE VIRTUAL ENVIRONMENT
# --------------------------------------

## Windows (cmd.exe) - Your Current Environment
1. Navigate to your project directory:
   ```
   cd c:\Users\lovingtracktor\Desktop\poster\poster-pod
   ```

2. Create a virtual environment if it doesn't exist already:
   ```
   python -m venv venv
   ```

3. Activate the virtual environment:
   ```
   venv\Scripts\activate
   ```

4. Install the required packages:
   ```
   pip install -r requirements.txt
   ```

5. Run the application:
   ```
   python app.py
   ```

## Linux/Mac
1. Navigate to your project directory:
   ```
   cd /path/to/poster-pod
   ```

2. Create a virtual environment if it doesn't exist already:
   ```
   python -m venv venv
   ```

3. Activate the virtual environment:
   ```
   source venv/bin/activate
   ```

4. Install the required packages:
   ```
   pip install -r requirements.txt
   ```

5. Run the application:
   ```
   python app.py
   ```

# REACTIVATING OR RESTARTING A VIRTUAL ENVIRONMENT
# ----------------------------------------------

## Reactivate an Existing Virtual Environment
If you've already created a virtual environment but closed your terminal or deactivated it, simply run:

### Windows
```
venv\Scripts\activate
```

### Linux/Mac
```
source venv/bin/activate
```

## Remove and Restart a Virtual Environment
If your virtual environment is corrupted or you want to start fresh:

### Windows
1. Deactivate the current environment if it's active:
   ```
   deactivate
   ```
2. Delete the virtual environment folder:
   ```
   rmdir /s /q venv
   ```
3. Create a new virtual environment:
   ```
   python -m venv venv
   ```
4. Activate the new environment:
   ```
   venv\Scripts\activate
   ```
5. Reinstall requirements:
   ```
   pip install -r requirements.txt
   ```

### Linux/Mac
1. Deactivate the current environment if it's active:
   ```
   deactivate
   ```
2. Delete the virtual environment folder:
   ```
   rm -rf venv
   ```
3. Create a new virtual environment:
   ```
   python -m venv venv
   ```
4. Activate the new environment:
   ```
   source venv/bin/activate
   ```
5. Reinstall requirements:
   ```
   pip install -r requirements.txt
   ```

# ADDING FILES TO .GITIGNORE
# ------------------------

If you want to prevent this file and other sensitive files from being tracked in git, create or edit a .gitignore file in your project root:

1. Create or open .gitignore:
   ```
   notepad .gitignore  # Windows
   nano .gitignore     # Linux/Mac
   ```

2. Add the following entries:
   ```
   # Virtual Environment
   venv/
   env/
   .env

   # Secret Files
   secret_links.txt
   .env
   *.pem
   *.key

   # Python
   __pycache__/
   *.py[cod]
   *$py.class
   *.so
   .Python
   build/
   develop-eggs/
   dist/
   downloads/
   eggs/
   .eggs/
   lib/
   lib64/
   parts/
   sdist/
   var/
   wheels/
   *.egg-info/
   .installed.cfg
   *.egg

   # Session files
   flask_session/

   # Logs
   *.log
   
   # Database files
   *.sqlite
   *.db
   ```

3. Commit the .gitignore file to your repository:
   ```
   git add .gitignore
   git commit -m "Added gitignore file"
   ```

4. If you've already committed files that you now want to ignore, remove them from git tracking (but keep them on your filesystem):
   ```
   git rm --cached secret_links.txt
   git commit -m "Removed secret_links.txt from git tracking"
   ```

# ALL ACCESSIBLE SITE ROUTES/LINKS
# -------------------------------

## Public Routes
- Main Page: /
- Podcast Player: /podcast/<podcast_id>
- Embedded Podcast: /embed/<podcast_id>
- Health Check: /health
- News Page: /news
- Video List: /postervideo
- Video Player: /video/<slug>

## API Routes
- Like Podcast: /like/<podcast_id> [POST]
- Upload Podcast: /upload [POST]
- Increment Views: /views/<podcast_id> [POST]
- Delete Podcast: /podcast/<podcast_id> [DELETE]
- News Update Time: /news/update-time
- Refresh News: /news/refresh [GET]
- Search Videos: /api/search_videos?q=<query>
- Upload Video: /upload/video [POST]
- Like Video: /video/<slug>/like [POST]
- Comment on Video: /video/<slug>/comment [POST]
- Record Video View: /video/<slug>/view [POST]

## Admin/Management Routes
- Admin Dashboard: /admin
- LinkedIn Manager: /linkedin-manager
- Twitter Manager: /twitter-manager
- LinkedIn Authentication: /linkedin/auth
- LinkedIn Callback: /linkedin/callback
- Twitter Authentication: /twitter-auth

## Static Resources
- Default News Image: /static/images/default-news.jpg
- Stylesheets: /static/css/styles.css
- JavaScript: /static/js/player.js
- Logo: /static/images/logo.png
- Favicons: Various paths in /static

# DATABASE INFORMATION
- Migrations are located in: /migrations/
- Models: 
  - Podcast Model (podcasts table)
  - Video Model (videos table)
  - News Model (news_articles table)
  - Activity Log Model

# AUTH FLOWS
- LinkedIn OAuth flow: /linkedin/auth -> /linkedin/callback
- Twitter OAuth flow: /twitter-auth

# HIDDEN FEATURES
- Embedded content is allowed from linkedin.com domains
- Videos have a commenting system with session-based controls
- View tracking is implemented with session tracking to prevent duplicates

Last Updated: June 15, 2025
